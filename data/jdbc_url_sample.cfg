/*
  Copy this file as jdbc_url.cfg, uncomment and modify the items if you want to specify the related startup parameters.
  jdbc_url.cfg is used to define the jdbc url string for a non-standard jdbc thin client URL, acts as the similar feature like oracle TNS file.
  For example, if the target db is only available via LDAP or ODBC protocal, you need to define it in jdbc_url.cfg, 
    as well as copying the related jar driver files into the "lib\ext" directory if necessary.
  
  Supposing you have defined a connection in jdbc_url.cfg and name it as "db2inst_test", then you can connect to the db via command "conn <user>/<pwd>@db2inst_test"
  
  The configurations must be in valid JSON format, otherwise the settings will not take affect.
  Structure:
                                        / diverClassName     (Optional , unless it's not the default driver)
                       / <Connection#1> - url                (Mandatory, allows the '&' syntaxt depending on database)
       <database type1>- <Connection#2> \ <other properties> (Optional , user/password/etc) 
     /                 \ <Connection#N> ...
 root- <database type2> ...    
     \
       <database typeN> ...
*/

return {
    
    oracle={
        orcl={driverClassName='oracle.jdbc.driver.OracleDriver', url='jdbc:oracle:thin:@localhost:1521/orcl'},
        tos={url='jdbc:oracle:thin:@192.168.176.3:1521/orcl'},
    },
    
    db2={
        db2inst_test={driverClassName = 'com.ibm.db2.jcc.DB2Driver', 
                      url             = 'jdbc:db2://localhost:50000/sample',
                      retrieveMessagesFromServerOnGetMessage='true'
                      },
        },
}