/*[[
    Show chart for DBA_HIST_LIBRARYCACHE. Usage: @@NAME ["<namespace>"] [inst_id] [yymmddhh24mi] [yymmddhh24mi] [-f"<filter>"]
    Impacted by settings: starttime,endtime,instance
    inst_id: Default as all instances, other options are:
                0         - Separate all instances
                a         - Group all instances
                <inst_id> - Only the specific instance
    -f       : User-defined filter. For example, -f"latch_name like '%XDB%'"
    --[[
        &V2     : default={&INSTANCE}
        &V3     : default={&STARTTIME}
        &V4     : default={&ENDTIME}
        &filter : default={1=1},f={}
    --]]
]]*/
{
    _attrs=[[
        SELECT 'System Latch State Chart' title
        from dual]],
    _sql=[[
        SELECT to_char(end_time,'YYYY-MM-DD HH24:MI') end_time,namespace,
               round(sum(gets/slot_size),2) "Gets per Minute",
               round(sum(PINS/slot_size),2) "Pins per Minute",
               round(sum(GETHITS)/nullif(sum(GETS),0),2) "Gets Hit Ratio(%)",
               round(sum(PINHITS)/nullif(sum(PINS),0),2) "Pins Hit Ratio(%)"
        FROM   (SELECT /*+merge no_expand ordered_predicates*/
                      instance_number inst_id,
                      trunc(end_interval_time+0,'MI') end_time,
                      namespace,
                      ((end_interval_time+0)-(begin_interval_time+0))*1440 Slot_size,
                      GETHITS - LAG(GETHITS) OVER(PARTITION BY instance_number,namespace,startup_time ORDER BY snap_id) GETHITS,
                      GETS - LAG(GETS) OVER(PARTITION BY instance_number,namespace,startup_time ORDER BY snap_id) GETS,
                      PINS - LAG(PINS) OVER(PARTITION BY instance_number,namespace,startup_time ORDER BY snap_id) PINS,
                      PINHITS - LAG(PINHITS) OVER(PARTITION BY instance_number,namespace,startup_time ORDER BY snap_id) PINHITS
               FROM   DBA_HIST_LIBRARYCACHE
               NATURAL JOIN dba_hist_snapshot
               WHERE  end_interval_time+0 between NVL(to_date(:V3,'yymmddhh24miss')-3/144,sysdate-7) AND NVL(to_date(:V4,'yymmddhh24miss'),sysdate)
               AND    (:V2 IS NULL OR lower(:V2) IN ('0', 'a') OR instance_number = :V2)
               AND    (&filter)
               AND    (:V1 is null or upper(namespace) like upper('%&V1%'))) a
        WHERE  (GETS>0 OR PINS>0)
        GROUP  BY namespace, end_time
        ORDER  BY 1]],
    _pivot=true,
    labelsKMB=true,
}