/*[[Show chart for gv$sysmetric_history/dba_hist_sysmetric_summary. Usage: @@NAME <metric_name|metric_group_name> [-d] [inst_id] [yymmddhh24mi] [yymmddhh24mi]
   -d:  based on DBA_HIST_SYSMETRIC_SUMMARY, otherwise based on GV$SYSMETRIC_HISTORY

    --[[
      &V2   : default={&INSTANCE}
      &V3   : default={&STARTTIME}
      &V4   : default={&ENDTIME}
      @BASE : 10.2={}
      &DICT : V={V}, D={D}
      &TITLE: V={GV$SYSMETRIC_HISTORY}, D={DBA_HIST_SYSMETRIC_SUMMARY}
    ]]--
]]*/

   {
       _attrs=[[select 'Sysmetric History(&TITLE)' title from dual]],
       _sql=[[
        SELECT sample_time, 
               REPLACE(REPLACE(METRIC_NAME, ' Bytes', ' MB'), ' Per ', ' / ') metric_name,
               VALUE / CASE
                   WHEN LOWER(' ' || metric_unit || ' ') LIKE '% bytes %' THEN
                    1024 * 1024
                   ELSE
                    1
               END metric_value,
               STD RNK_
        FROM   (SELECT /*+merge no_expand*/
                        A.end_time sample_time, A.METRIC_NAME , A.metric_unit, SUM(VALUE) VALUE,STDDEV(SUM(VALUE)) OVER(PARTITION BY A.METRIC_NAME) std
                FROM   (SELECT inst_id, end_time, metric_unit,group_id, VALUE,METRIC_NAME||decode(nvl(lower(:V2), 'a'), 'a', NULL, ' #' || inst_id) METRIC_NAME
                        FROM  (SELECT inst_id, end_time, METRIC_NAME, metric_unit,group_id, VALUE
                              FROM   GV$SYSMETRIC_HISTORY
                              WHERE  'V' = UPPER(:DICT)
                              UNION ALL
                              SELECT INSTANCE_NUMBER, END_TIME, METRIC_NAME, metric_unit,group_id,AVERAGE
                              FROM   DBA_HIST_SYSMETRIC_SUMMARY
                              WHERE  'D' = UPPER(:DICT)) A 
                              JOIN (SELECT group_id,group_name FROM V$METRICNAME) b USING(group_id)
                        WHERE  (:V2 IS NULL  OR lower(:V2) IN ('0', 'a') OR inst_id = :V2)
                        AND    (:V1 IS NULL OR UPPER(METRIC_NAME) LIKE UPPER('%&V1%') OR upper(B.GROUP_NAME)=upper(:V1)) /* changed from metric_id to metric_name as name is more intuitive*/
                        AND    end_time between nvl(to_date(:V3,'yymmddhh24mi'),sysdate-7) and nvl(to_date(:V4,'yymmddhh24mi'),sysdate)) A
                 GROUP  BY a.end_time, A.METRIC_NAME, a.metric_unit
                 ORDER BY STD DESC)
        ]],
       _pivot=true,
       labelsKMB=true,
       ylabel='Value',
       multiScale=true,
   }